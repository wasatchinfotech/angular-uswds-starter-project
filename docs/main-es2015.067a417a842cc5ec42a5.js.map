{"version":3,"sources":["webpack:///src/app/shared/services/common.service.ts","webpack:///src/app/shared/services/auth.service.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/dashboard/dashboard-routing.module.ts","webpack:///src/app/dashboard/components/dashboard-view/dashboard-view.component.ts","webpack:///src/app/dashboard/components/dashboard-view/dashboard-view.component.html","webpack:///src/app/dashboard/components/profile/profile.component.ts","webpack:///src/app/dashboard/components/profile/profile.component.html","webpack:///src/app/dashboard/components/settings/settings.component.ts","webpack:///src/app/dashboard/components/settings/settings.component.html","webpack:///src/app/dashboard/dashboard.module.ts","webpack:///src/app/shared/components/base-card/base-card.component.ts","webpack:///src/app/shared/components/base-card/base-card.component.html","webpack:///src/app/landing/landing-routing.module.ts","webpack:///src/app/landing/landing.component.ts","webpack:///src/app/landing/landing.component.html","webpack:///src/app/landing/landing.module.ts","webpack:///src/app/shared/enums/message-type.enum.ts","webpack:///src/app/shared/config/message.config.ts","webpack:///src/app/shared/components/message/message.component.ts","webpack:///src/app/shared/components/message/message.component.html","webpack:///src/app/auth/components/sign-in/sign-in.component.html","webpack:///src/app/auth/components/sign-in/sign-in.component.ts","webpack:///src/app/auth/components/sign-out/sign-out.component.ts","webpack:///src/app/auth/components/sign-out/sign-out.component.html","webpack:///src/app/auth/components/forgot-username/forgot-username.component.html","webpack:///src/app/auth/components/forgot-username/forgot-username.component.ts","webpack:///src/app/auth/components/reset-password/reset-password.component.html","webpack:///src/app/auth/components/reset-password/reset-password.component.ts","webpack:///src/app/auth/components/forgot-password/forgot-password.component.html","webpack:///src/app/auth/components/register/register.component.html","webpack:///src/app/auth/auth-routing.module.ts","webpack:///src/app/auth/components/forgot-password/forgot-password.component.ts","webpack:///src/app/auth/components/register/register.component.ts","webpack:///src/app/auth/auth.module.ts","webpack:///src/app/shared/components/header/header.component.html","webpack:///src/app/shared/components/header/header.component.ts","webpack:///src/app/shared/components/footer/footer.component.ts","webpack:///src/app/shared/components/footer/footer.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/shared/layout/doc-layout/doc-layout.component.ts","webpack:///src/app/shared/layout/doc-layout/doc-layout.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/dashboard/guard/account.guard.ts","webpack:///src/app/shared/components/page-not-found/page-not-found.component.ts","webpack:///src/app/shared/components/page-not-found/page-not-found.component.html","webpack:///src/app/app.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["CommonService","userLoggedInSource","isUserAuthenticated$","this","asObservable","authModuleSource","isAuthModule$","isLogged","next","AuthService","http","get","subscribe","data","localDbUser","username","password","isUserLoggedIn","localStorage","setItem","JSON","stringify","getItem","removeItem","SharedModule","routes","path","component","DashboardViewComponent","ProfileComponent","SettingsComponent","DashboardRoutingModule","forChild","DashboardModule","BaseCardComponent","isHidden","console","log","LandingComponent","baseCardComponent","toggleCard","LandingRoutingModule","LandingModule","MessageType","ERROR","INFO","WARN","SUCCESS","MESSAGES_CONFIG","form","general","generalFormError","login_required","label","newPassword","confirmPassword","warn","email","required_confirmPassword","required_newPassword","error","eight_character","password_match","MessageComponent","SignInComponent","fb","authService","router","route","commonService","VALIDATION_MESSAGE","MESSAGE_TYPE","isFormSubmitted","isLoginError","VALIDATION_LOGON_FAILED_MESSAGE","isLoginAttemptFailed","signinForm","group","required","minLength","queryParamMap","pipe","map","params","res","publishAuthModule","valid","login","value","publishUserAuthentication","err","navigate","onSubmit","SignOutComponent","logout","ForgotUsernameComponent","forgotUsernameForm","ResetPasswordComponent","msgConfig","resetPasswordForm","validator","isPasswordMatched","formGroup","hasError","errorType","redirectTo","pathMatch","ForgotPasswordComponent","forgotPasswordForm","RegisterComponent","registrationForm","AuthRoutingModule","AuthModule","HeaderComponent","isLoginRequired","inAuthModule","isOpen","isFirstMenuOpen","isSecondMenuOpen","getCurrentUserLoggedInStatus","FooterComponent","AppComponent","DocLayoutComponent","loadChildren","then","m","canActivate","AccountGuard","state","queryParams","login_attempt","children","PageNotFoundComponent","AppRoutingModule","forRoot","AppModule","bootstrapModule","catch","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"x","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommonService {\r\n\r\n  private userLoggedInSource = new BehaviorSubject<boolean>(false);\r\n  isUserAuthenticated$ = this.userLoggedInSource.asObservable();\r\n\r\n  private authModuleSource = new BehaviorSubject<boolean>(false);\r\n  isAuthModule$ = this.authModuleSource.asObservable();\r\n\r\n  publishUserAuthentication(isLogged: boolean) {\r\n    this.userLoggedInSource.next(isLogged);\r\n  }\r\n\r\n  publishAuthModule(isLogged: boolean) {\r\n    this.authModuleSource.next(isLogged);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../../shared/models/user';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private localDbUser: User;\n  constructor(private http: HttpClient) {\n    this.http.get('assets/data/localUser.json').subscribe(\n      (data) => {\n        this.localDbUser = data['user'] as User;\n      }\n    );\n  }\n\n  login(username: string, password: string): Observable<boolean> {\n    let isUserLoggedIn = false;\n    if (this.localDbUser.username === username && this.localDbUser.password === password) {\n      localStorage.setItem('currentUser', JSON.stringify(this.localDbUser));\n      isUserLoggedIn = true;\n    }\n    return of(isUserLoggedIn);\n  }\n\n  getCurrentUserLoggedInStatus(): boolean {\n    return localStorage.getItem('currentUser') != null;\n  }\n\n  logout(): Observable<boolean> {\n    localStorage.removeItem('currentUser');\n    return of(true);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { HeaderComponent } from './components/header/header.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { DocLayoutComponent } from './layout/doc-layout/doc-layout.component';\nimport { MessageComponent } from './components/message/message.component';\nimport { BaseCardComponent } from \"./components/base-card/base-card.component\";\n\n@NgModule({\n  declarations: [HeaderComponent, FooterComponent, DocLayoutComponent, MessageComponent, BaseCardComponent],\n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  exports: [HeaderComponent, FooterComponent, MessageComponent, BaseCardComponent]\n})\nexport class SharedModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardViewComponent } from './components/dashboard-view/dashboard-view.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { SettingsComponent } from './components/settings/settings.component';\n\nconst routes: Routes = [\n  { path: '', component: DashboardViewComponent },\n  { path: 'profile', component: ProfileComponent },\n  { path: 'settings', component: SettingsComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DashboardRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard-view',\n  templateUrl: './dashboard-view.component.html',\n  styleUrls: ['./dashboard-view.component.scss']\n})\nexport class DashboardViewComponent implements OnInit {\n\n  ngOnInit(): void {\n  }\n}\n","<div class=\"grid-container \">\r\n    <div class=\"grid-row display-flex flex-column flex-align-center\">\r\n        <legend class=\"usa-legend margin-y-205\">Dashboard</legend>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"grid-container \">\n    <div class=\"grid-row display-flex flex-column flex-align-center\">\n        <legend class=\"usa-legend margin-y-205\">Profile</legend>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"grid-container \">\n    <div class=\"grid-row display-flex flex-column flex-align-center\">\n        <legend class=\"usa-legend margin-y-205\">Settings</legend>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { SettingsComponent } from './components/settings/settings.component';\nimport { DashboardViewComponent } from './components/dashboard-view/dashboard-view.component';\n\n\n@NgModule({\n  declarations: [ProfileComponent, SettingsComponent, DashboardViewComponent],\n  imports: [\n    CommonModule,\n    DashboardRoutingModule\n  ]\n})\nexport class DashboardModule { }\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-base-card',\n  templateUrl: './base-card.component.html',\n  styleUrls: ['./base-card.component.scss']\n})\nexport class BaseCardComponent implements OnInit, OnDestroy {\n\n  @Input() isHidden: boolean = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    // ON \n    console.log('Component Loaded');\n  }\n\n  ngOnDestroy(): void {\n    // ON \n    console.log('Component Destroyed');\n  }\n\n  toggleCard() {\n    this.isHidden = !this.isHidden;\n  }\n\n}\n","<div [hidden]=\"isHidden\">\n  <ul class=\"usa-card-group\">\n    <li class=\"usa-card usa-card--flag usa-card--media-right\">\n      <div class=\"usa-card__container\">\n        <header class=\"usa-card__header\">\n          <h2 class=\"usa-card__heading\">Flag media on right</h2>\n        </header>\n        <div class=\"usa-card__media\">\n          <div class=\"usa-card__img\">\n            <img\n              src=\"https://images.unsplash.com/photo-1579800070193-abe62433f737?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=610&fit=max&ixid=eyJhcHBfaWQiOjE0NTg5fQ\"\n              alt=\"A placeholder image\">\n          </div>\n        </div>\n\n        <div class=\"usa-card__body\">\n          <p>Lorem ipsum dolor sit amet consectetur adipisicing elit.</p>\n        </div>\n        <div class=\"usa-card__footer\">\n          <button class=\"usa-button\">Visit Florida Keys</button>\n        </div>\n      </div>\n    </li>\n  </ul>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LandingComponent } from './landing.component';\n\nconst routes: Routes = [\n  { path: '', component: LandingComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LandingRoutingModule { }\n","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { BaseCardComponent } from '../shared/components/base-card/base-card.component';\n\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.scss']\n})\nexport class LandingComponent implements AfterViewInit {\n  @ViewChild(BaseCardComponent)\n  private baseCardComponent: BaseCardComponent;\n  constructor() { }\n\n  ngAfterViewInit(): void {\n    console.log('Access base uswds card component here');\n  }\n\n  toggleCard(){\n    this.baseCardComponent.toggleCard();\n  }\n\n}\n","<main id=\"main-content\">\r\n    <section class=\"usa-hero\" aria-label=\"Introduction\">\r\n        <div class=\"grid-container\">\r\n            <div class=\"usa-hero__callout\">\r\n                <h1 class=\"usa-hero__heading\"><span class=\"usa-hero__heading--alt\">Hero callout:</span>Bring attention\r\n                    to a project priority\r\n                </h1>\r\n                <p>Support the callout with some short explanatory text. You don’t need more than a couple of sentences.\r\n                </p><a class=\"usa-button\" href=\"javascript:void(0)\">Call to action</a>\r\n            </div>\r\n        </div>\r\n    </section>\r\n\r\n\r\n\r\n    <section class=\"grid-container usa-section\">\r\n        <div class=\"grid-row grid-gap\">\r\n            <div class=\"tablet:grid-col-4\">\r\n                <h2 class=\"font-heading-xl margin-top-0 tablet:margin-bottom-0\">A tagline highlights your approach</h2>\r\n            </div>\r\n            <div class=\"tablet:grid-col-8 usa-prose\">\r\n                <p>The tagline should inspire confidence and interest, focusing on the value that your overall approach\r\n                    offers to your audience. Use a heading typeface and keep your tagline to just a few words, and don’t\r\n                    confuse or mystify.</p>\r\n                <p>Use the right side of the grid to explain the tagline a bit more. What are your goals? How do you do\r\n                    your work? Write in the present tense, and stay brief here. People who are interested can find\r\n                    details on internal pages.</p>\r\n\r\n            </div>\r\n        </div>\r\n    </section>\r\n\r\n\r\n    <section class=\"usa-graphic-list usa-section usa-section--dark\">\r\n        <div class=\"grid-container\">\r\n            <div class=\"usa-graphic-list__row grid-row grid-gap\">\r\n                <div class=\"usa-media-block tablet:grid-col\">\r\n                    <img class=\"usa-media-block__img\" src=\"/assets/img/circle-124.png\" alt=\"Alt text\">\r\n                    <div class=\"usa-media-block__body\">\r\n                        <h2 class=\"usa-graphic-list__heading\">Graphic headings can vary.</h2>\r\n                        <p>Graphic headings can be used a few different ways, depending on what your landing page is\r\n                            for. Highlight your values, specific program areas, or results.</p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"usa-media-block tablet:grid-col\">\r\n                    <img class=\"usa-media-block__img\" src=\"/assets/img/circle-124.png\" alt=\"Alt text\">\r\n                    <div class=\"usa-media-block__body\">\r\n                        <h2 class=\"usa-graphic-list__heading\">Stick to 6 or fewer words.</h2>\r\n                        <p>Keep body text to about 30 words. They can be shorter, but try to be somewhat balanced across\r\n                            all four. It creates a clean appearance with good spacing.</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"usa-graphic-list__row grid-row grid-gap\">\r\n                <div class=\"usa-media-block tablet:grid-col\">\r\n                    <img class=\"usa-media-block__img\" src=\"/assets/img/circle-124.png\" alt=\"Alt text\">\r\n                    <div class=\"usa-media-block__body\">\r\n                        <h2 class=\"usa-graphic-list__heading\">Never highlight anything without a goal.</h2>\r\n                        <p>For anything you want to highlight here, understand what your users know now, and what\r\n                            activity or impression you want from them after they see it.</p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"usa-media-block tablet:grid-col\">\r\n                    <img class=\"usa-media-block__img\" src=\"/assets/img/circle-124.png\" alt=\"Alt text\">\r\n                    <div class=\"usa-media-block__body\">\r\n                        <h2 class=\"usa-graphic-list__heading\">Could also have 2 or 6.</h2>\r\n                        <p>In addition to your goal, find out your users’ goals. What do they want to know or do that\r\n                            supports your mission? Use these headings to show those.</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n\r\n\r\n    <section id=\"test-section-id\" class=\"usa-section\">\r\n        <div class=\"grid-container\">\r\n            <h2 class=\"font-heading-xl margin-y-0\">Section heading</h2>\r\n            <p class=\"usa-intro\">Everything up to this point should help people understand your agency or project: who\r\n                you are, your goal or mission, and how you approach it. Use this section to encourage them to act.\r\n                Describe why they should get in touch here, and use an active verb on the button below. “Get in touch,”\r\n                “Learn more,” and so on.</p>\r\n            <div class=\"grid-row flex-row\">\r\n                <div class=\"grid-col\"><button (click)=\"toggleCard()\" class=\"usa-button usa-button--outline\">Toggle Card\r\n                        Visibility</button></div>\r\n                <div class=\"grid-col\">\r\n                    <app-base-card #landingCard [isHidden]=\"false\"></app-base-card>\r\n                </div>\r\n            </div>\r\n        </div>  \r\n    </section>\r\n\r\n</main>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LandingRoutingModule } from './landing-routing.module';\nimport { LandingComponent } from './landing.component';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [LandingComponent],\n  imports: [\n    CommonModule,\n    LandingRoutingModule,\n    SharedModule\n  ]\n})\nexport class LandingModule { }\n","export enum MessageType {\n    ERROR,\n    INFO,\n    WARN,\n    SUCCESS\n}\n","export const MESSAGES_CONFIG = {\n  form: {\n    general: {\n      generalFormError: 'Please correct the validation errors found below',\n      login_required: 'Please login to continue'\n    },\n    label: {\n      newPassword: 'New Password',\n      confirmPassword: 'Confirm Password'\n    },\n    warn: {\n      email: 'Please enter email address',\n      password: 'Please enter password',\n      required_confirmPassword: 'Please enter confirm password',\n      required_newPassword: 'Please enter new password',\n    },\n    error: {\n      eight_character: 'Please enter atleast eight characters',\n      password_match: 'Passwords should match'\n    }\n  }\n};\n","import { Component, OnInit, Input } from '@angular/core'; \n\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.sass']\n})\nexport class MessageComponent implements OnInit {\n\n  @Input() message: string;\n  @Input() messageType: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n","<div class=\"usa-alert usa-alert--error\" role=\"alert\">\n    <div class=\"usa-alert__body\">\n      <h3 class=\"usa-alert__heading\">{{messageType}}</h3>\n      <p class=\"usa-alert__text\">{{message}}</p>\n    </div>\n  </div>","<div class=\"grid-container\">\n  <div class=\"grid-row \">\n    <div class=\"grid-col-fill\" *ngIf=\"isFormValid() || isLoginError\">\n      <app-message [message]=\"VALIDATION_MESSAGE\" [messageType]=\"MESSAGE_TYPE\"></app-message>\n    </div> \n    <div class=\"grid-col-fill\" *ngIf=\"isLoginAttemptFailed\">\n      <app-message [message]=\"VALIDATION_LOGON_FAILED_MESSAGE\" [messageType]=\"MESSAGE_TYPE\"></app-message>\n    </div>\n  </div>\n  <form class=\"usa-form margin-x-auto\" [formGroup]=\"signinForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"grid-row\">\n\n      <legend class=\"usa-legend\">Sign In</legend><br>\n      <div class=\"width-full\">\n        <span>or\n          <button  type=\"button\" class=\"usa-button usa-button--unstyled\" routerLink=\"/register\">create an account</button>\n        </span>\n      </div>\n\n      <fieldset class=\"usa-fieldset width-full\">\n        <div class=\"usa-form-group \" [class.usa-form-group--error]=\"isUsernameError()\">\n          <label class=\"usa-label\" for=\"username\">Username or email address</label>\n          <span class=\"usa-error-message\" id=\"input-error-message\" role=\"alert\" *ngIf=\"isUsernameError()\">Please enter\n            email address</span>\n          <input class=\"usa-input\" [class.usa-input--error]=\"isUsernameError()\" type=\"text\" autocapitalize=\"off\"\n            autocorrect=\"off\" required aria-required=\"true\" formControlName=\"username\">\n        </div>\n      </fieldset>\n\n\n      <fieldset class=\"usa-fieldset width-full\">\n        <div class=\"usa-form-group \" [class.usa-form-group--error]=\"isPasswordError()\">\n          <label class=\"usa-label\" for=\"password\">Password</label>\n          <span class=\"usa-error-message\" id=\"input-error-message\" role=\"alert\" *ngIf=\"isPasswordError()\">Please enter\n            password</span>\n          <input class=\"usa-input\" [class.usa-input--error]=\"isPasswordError()\" id=\"password-sign-in\" type=\"password\"\n            formControlName=\"password\">\n          <p class=\"usa-form__note\">\n            <a title=\"Show password\" href=\"javascript:void(0);\" class=\"usa-show-password\"\n              aria-controls=\"password-sign-in\">Show password</a>\n          </p>\n        </div>\n      </fieldset>\n\n    </div>\n\n    <div class=\"grid-row flex-column\">\n      <div class=\"grid-col\">\n        <input class=\"usa-button width-full\" type=\"submit\" value=\"Sign in\">\n      </div>\n      <div class=\"grid-col\"> <button  type=\"button\" class=\"usa-button usa-button--unstyled\" routerLink=\"/forgot-username\">Forgot\n          username?</button>\n      </div>\n      <div class=\"grid-col\"><button type=\"button\"  class=\"usa-button usa-button--unstyled\" routerLink=\"/forgot-password\">Forgot\n          password?</button>\n      </div>\n    </div>\n  </form>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { MessageType } from '../../../shared/enums/message-type.enum';\nimport { MESSAGES_CONFIG } from '../../../shared/config/message.config';\nimport { AuthService } from '../../../shared/services/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { map } from 'rxjs/operators'; \nimport { CommonService } from '../../../shared/services/common.service';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.sass'],\n  providers: [AuthService]\n})\nexport class SignInComponent implements OnInit, OnDestroy {\n\n  VALIDATION_MESSAGE = MESSAGES_CONFIG.form.general.generalFormError;\n  MESSAGE_TYPE: string = MessageType[MessageType.ERROR];\n  isFormSubmitted = false;\n  isLoginError = false;\n  VALIDATION_LOGON_FAILED_MESSAGE = MESSAGES_CONFIG.form.general.login_required;\n  isLoginAttemptFailed = false;\n\n  signinForm = this.fb.group({\n    username: [null, Validators.required],\n    password: [null, [Validators.required, Validators.minLength(8)]]\n  });\n\n  constructor(private fb: FormBuilder, private authService: AuthService,\n    private router: Router, private route: ActivatedRoute,\n    private commonService: CommonService) {\n\n    this.route\n      .queryParamMap\n      .pipe(map(params => params.get('login_attempt') || 'None')).subscribe(res => {\n        this.isLoginAttemptFailed = res === 'failed';\n      });\n  }\n\n  ngOnInit(): void {\n    this.commonService.publishAuthModule(true);\n  }\n\n  ngOnDestroy() {\n    this.commonService.publishAuthModule(false);\n  }\n\n  isFormValid(): boolean {\n    return this.isFormSubmitted && !this.signinForm.valid;\n  }\n\n  isPasswordError(): boolean {\n    return this.isFormSubmitted && !this.signinForm.valid && !this.signinForm.get('password').valid;\n  }\n\n  isUsernameError(): boolean {\n    return this.isFormSubmitted && !this.signinForm.valid && !this.signinForm.get('username').valid;\n  }\n\n  onSubmit() {\n    this.isFormSubmitted = true;\n    if (this.signinForm.valid) {\n      this.isLoginError = false;\n      this.authService.login(this.signinForm.get('username').value, this.signinForm.get('password').value).subscribe(res => {\n        if (!res) {\n          this.isLoginError = true;\n          this.VALIDATION_MESSAGE = 'Please enter valid username and password';\n        } else {\n          this.commonService.publishUserAuthentication(true);\n        }\n      }, err => { }, () => {\n        this.router.navigate(['/dashboard']);\n      });\n    }\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { CommonService } from '../../../shared/services/common.service';\nimport { AuthService } from '../../../shared/services/auth.service';\n\n@Component({\n  selector: 'app-sign-out',\n  templateUrl: './sign-out.component.html',\n  styleUrls: ['./sign-out.component.sass']\n})\nexport class SignOutComponent implements OnInit, OnDestroy {\n\n  constructor(private commonService: CommonService, private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.commonService.publishAuthModule(true);\n    this.authService.logout().subscribe(() => {\n      this.commonService.publishUserAuthentication(false);\n    });\n  }\n\n  ngOnDestroy() {\n    this.commonService.publishAuthModule(false);\n  }\n\n}\n","<div class=\"grid-container\">\n    <div class=\"grid-row display-flex flex-column flex-align-center\">\n        <legend class=\"usa-legend\">Signout</legend>\n        <div class=\"usa-alert usa-alert--success\">\n            <div class=\"usa-alert__body\">\n                <h3 class=\"usa-alert__heading\">User Logged Out</h3>\n                <p class=\"usa-alert__text\">You have successfully logged out from system, \n                    <button  type=\"button\" class=\"usa-button usa-button--unstyled\" routerLink=\"/\">Home Page</button></p>\n            </div>\n        </div>\n    </div> \n</div>","<div class=\"grid-container\">\n  <div class=\"grid-row \">\n    <div class=\"grid-col-fill\" *ngIf=\"isFormValid()\">\n      <app-message [message]=\"VALIDATION_MESSAGE\" [messageType]=\"MESSAGE_TYPE\"></app-message>\n    </div>\n  </div>\n  <form class=\"usa-form margin-x-auto\" [formGroup]=\"forgotUsernameForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"grid-row\">\n\n      <legend class=\"usa-legend\">Forgot Username</legend><br>\n       \n      <fieldset class=\"usa-fieldset width-full\">\n        <div class=\"usa-form-group \" [class.usa-form-group--error]=\"isUsernameError()\">\n          <label class=\"usa-label\" for=\"username\">Email address</label>\n          <span class=\"usa-error-message\" id=\"input-error-message\" role=\"alert\"\n            *ngIf=\"isUsernameError()\">Please enter email address</span>\n          <input class=\"usa-input\" [class.usa-input--error]=\"isUsernameError()\" type=\"email\" email\n            autocapitalize=\"off\" autocorrect=\"off\" required aria-required=\"true\" formControlName=\"username\">\n        </div>\n      </fieldset> \n\n    </div>\n\n    <div class=\"grid-row flex-column\">\n      <div class=\"grid-col\">\n        <input class=\"usa-button width-full\" type=\"submit\" value=\"Retrieve Username\">\n      </div>\n      <div class=\"grid-col\"> <button type=\"button\" class=\"usa-button usa-button--unstyled\" routerLink=\"/forgot-password\">Forgot\n          password?</button>\n      </div>\n      <div class=\"grid-col\"><button type=\"button\" class=\"usa-button usa-button--unstyled\"  routerLink=\"/auth\">Signin</button>\n      </div>\n    </div>\n  </form>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Validators, FormBuilder } from '@angular/forms';\nimport { MESSAGES_CONFIG } from '../../../shared/config/message.config';\nimport { MessageType } from '../../../shared/enums/message-type.enum';\nimport { CommonService } from '../../../shared/services/common.service';\n\n@Component({\n  selector: 'app-forgot-username',\n  templateUrl: './forgot-username.component.html',\n  styleUrls: ['./forgot-username.component.sass']\n})\nexport class ForgotUsernameComponent implements OnInit, OnDestroy {\n\n  VALIDATION_MESSAGE = MESSAGES_CONFIG.form.general.generalFormError;\n  MESSAGE_TYPE: string = MessageType[MessageType.ERROR];\n  isFormSubmitted = false;\n\n  forgotUsernameForm = this.fb.group({\n    username: ['', Validators.required]\n  });\n\n  constructor(private fb: FormBuilder, private commonService: CommonService) { }\n\n  ngOnInit(): void {\n    this.commonService.publishAuthModule(true);\n  }\n\n  ngOnDestroy() {\n    this.commonService.publishAuthModule(false);\n  }\n\n  isUsernameError(): boolean {\n    return this.isFormSubmitted && !this.forgotUsernameForm.valid && !this.forgotUsernameForm.get('username').valid;\n  }\n\n  isFormValid() {\n    return this.isFormSubmitted && !this.forgotUsernameForm.valid;\n  }\n\n  onSubmit() {\n    this.isFormSubmitted = true;\n  }\n\n}\n","<div class=\"grid-container\">\n  <div class=\"grid-row \">\n    <div class=\"grid-col-fill\" *ngIf=\"isFormValid()\">\n      <app-message [message]=\"VALIDATION_MESSAGE\" [messageType]=\"MESSAGE_TYPE\"></app-message>\n    </div>\n  </div>\n  <form class=\"usa-form margin-x-auto\" [formGroup]=\"resetPasswordForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"grid-row\">\n\n      <legend class=\"usa-legend\">Reset password</legend>\n      <span>Please enter your new password</span>\n\n      <fieldset class=\"usa-fieldset width-full\">\n        <div class=\"usa-form-group \"\n          [class.usa-form-group--error]=\"isFormSubmitted && (passwordErrorType('required') || passwordErrorType('minlength') || isPasswordMismatchError())\">\n          <label class=\"usa-label\" for=\"username\">{{msgConfig.form.label.newPassword}}</label>\n          <span class=\"usa-error-message\" role=\"alert\"\n            *ngIf=\"isFormSubmitted && passwordErrorType('required')\">{{msgConfig.form.warn.required_newPassword}}</span>\n          <span class=\"usa-error-message\" role=\"alert\"\n            *ngIf=\"isFormSubmitted && passwordErrorType('minlength')\">{{msgConfig.form.error.eight_character}}</span>\n          <span class=\"usa-error-message\" role=\"alert\"\n            *ngIf=\"isPasswordMismatchError()\">{{msgConfig.form.error.password_match}}</span>\n          <input class=\"usa-input\" id=\"password-reset\"\n            [class.usa-input--error]=\"isFormSubmitted && (passwordErrorType('required') || passwordErrorType('minlength') || isPasswordMismatchError())\"\n            [class.usa-input--success]=\"isFormSubmitted && !(passwordErrorType('required') || passwordErrorType('minlength') || isPasswordMismatchError())\"\n            type=\"password\" autocapitalize=\"off\" autocorrect=\"off\" required aria-required=\"true\"\n            formControlName=\"newPassword\">\n        </div>\n      </fieldset>\n\n      <fieldset class=\"usa-fieldset width-full\">\n        <div class=\"usa-form-group \"\n          [class.usa-form-group--error]=\"isFormSubmitted && (confirmPasswordErrorType('required') || confirmPasswordErrorType('minlength') || isPasswordMismatchError())\">\n          <label class=\"usa-label\" for=\"username\">{{msgConfig.form.label.confirmPassword}}</label>\n          <span class=\"usa-error-message\" role=\"alert\"\n            *ngIf=\"isFormSubmitted && confirmPasswordErrorType('required')\">{{msgConfig.form.warn.required_confirmPassword}}</span>\n          <span class=\"usa-error-message\" role=\"alert\"\n            *ngIf=\"isFormSubmitted && confirmPasswordErrorType('minlength')\">{{msgConfig.form.error.eight_character}}</span>\n          <span class=\"usa-error-message\" role=\"alert\"\n            *ngIf=\"isPasswordMismatchError()\">{{msgConfig.form.error.password_match}}</span>\n          <input class=\"usa-input\" id=\"confirmPassword\"\n            [class.usa-input--error]=\"isFormSubmitted && (confirmPasswordErrorType('required') || confirmPasswordErrorType('minlength') || isPasswordMismatchError())\"\n            [class.usa-input--success]=\"isFormSubmitted && !(confirmPasswordErrorType('required') || confirmPasswordErrorType('minlength') || isPasswordMismatchError())\"\n            type=\"password\" autocapitalize=\"off\" autocorrect=\"off\" required aria-required=\"true\"\n            formControlName=\"confirmPassword\">\n\n          <span class=\"usa-form__note\">\n            <a href=\"javascript:void(0);\" class=\"usa-show-multipassword\"\n              aria-controls=\"password-reset confirmPassword\">Show\n              my typing</a>\n          </span>\n        </div>\n      </fieldset>\n    </div>\n\n    <div class=\"grid-row flex-column margin-top-neg-1\">\n      <div class=\"grid-col\">\n        <input class=\"usa-button  width-full\" type=\"submit\" value=\"Reset password\">\n      </div>\n      <div class=\"grid-col\"><button class=\"usa-button usa-button--unstyled\" routerLink=\"/auth\" type=\"button\">Signin</button>\n      </div>\n    </div>\n\n  </form>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup} from '@angular/forms';\nimport { MessageType } from '../../../shared/enums/message-type.enum';\nimport { MESSAGES_CONFIG } from '../../../shared/config/message.config';\nimport { CommonService } from '../../../shared/services/common.service';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.sass']\n})\nexport class ResetPasswordComponent implements OnInit, OnDestroy {\n\n  VALIDATION_MESSAGE = MESSAGES_CONFIG.form.general.generalFormError;\n  msgConfig = MESSAGES_CONFIG;\n  MESSAGE_TYPE: string = MessageType[MessageType.ERROR];\n  isFormSubmitted = false;\n\n  resetPasswordForm = this.fb.group({\n    newPassword: [null, [Validators.required, Validators.minLength(8)]],\n    confirmPassword: [null, [Validators.required, Validators.minLength(8)]]\n  }, { validator: this.isPasswordMatched('newPassword', 'confirmPassword') });\n\n  isPasswordMatched(newPassword, confirmPassword) {\n    return (formGroup: FormGroup): { [key: string]: any } => {\n      return formGroup.get(newPassword).value === formGroup.get(confirmPassword).value ? null : { 'mismatch': true };\n    };\n  }\n\n  constructor(private fb: FormBuilder, private commonService: CommonService) { }\n\n  ngOnInit(): void {\n    this.commonService.publishAuthModule(true);\n  }\n\n  ngOnDestroy() {\n    this.commonService.publishAuthModule(false);\n  }\n\n  isFormValid(): boolean {\n    return this.isFormSubmitted && !this.resetPasswordForm.valid;\n  }\n\n  isPasswordMismatchError(): boolean {\n    return this.isFormSubmitted && this.resetPasswordForm.hasError('mismatch');\n  }\n\n  passwordErrorType(errorType: string) {\n    return this.resetPasswordForm.get('newPassword').hasError(errorType);\n  }\n\n  confirmPasswordErrorType(errorType: string) {\n    return this.resetPasswordForm.get('confirmPassword').hasError(errorType);\n  }\n\n  onSubmit() {\n    this.isFormSubmitted = true;\n  }\n\n}\n","<div class=\"grid-container\">\n  <div class=\"grid-row \">\n    <div class=\"grid-col-fill\" *ngIf=\"isFormValid()\">\n      <app-message [message]=\"VALIDATION_MESSAGE\" [messageType]=\"MESSAGE_TYPE\"></app-message>\n    </div>\n  </div>\n  <form class=\"usa-form margin-x-auto\" [formGroup]=\"forgotPasswordForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"grid-row\">\n\n      <legend class=\"usa-legend\">Forgot Password</legend><br>\n\n      <fieldset class=\"usa-fieldset width-full\">\n        <div class=\"usa-form-group \" [class.usa-form-group--error]=\"isUsernameError()\">\n          <label class=\"usa-label\" for=\"username\">Email address</label>\n          <span class=\"usa-error-message\" id=\"input-error-message\" role=\"alert\" *ngIf=\"isUsernameError()\">Please enter\n            email address</span>\n          <input class=\"usa-input\" [class.usa-input--error]=\"isUsernameError()\" type=\"email\" email autocapitalize=\"off\"\n            autocorrect=\"off\" required aria-required=\"true\" formControlName=\"username\">\n        </div>\n      </fieldset>\n\n    </div>\n\n\n    <div class=\"grid-row flex-column\">\n      <div class=\"grid-col\">\n        <input class=\"usa-button  width-full\" type=\"submit\" value=\"Request New Password\">\n      </div>\n      <div class=\"grid-col\"> <button type=\"button\" class=\"usa-button usa-button--unstyled\" routerLink=\"/forgot-username\">Forgot\n          username?</button>\n      </div>\n      <div class=\"grid-col\"> <button  type=\"button\" class=\"usa-button usa-button--unstyled\" routerLink=\"/reset-password\">Reset\n          password</button>\n      </div>\n      <div class=\"grid-col\"><button type=\"button\" class=\"usa-button usa-button--unstyled\"  routerLink=\"/auth\">Signin</button>\n      </div>\n    </div>\n\n\n  </form>\n</div>","<div class=\"grid-container\">\n  <div class=\"grid-row \">\n    <div class=\"grid-col-fill\" *ngIf=\"isFormValid()\">\n      <app-message [message]=\"VALIDATION_MESSAGE\" [messageType]=\"MESSAGE_TYPE\"></app-message>\n    </div>\n  </div>\n  <form class=\"usa-form margin-x-auto\" [formGroup]=\"registrationForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"grid-row\">\n\n      <legend class=\"usa-legend\">Sign Up</legend>\n      <fieldset class=\"usa-fieldset width-full\">\n        <div class=\"usa-form-group \" [class.usa-form-group--error]=\"isFormValid()\">\n          <label class=\"usa-label\" for=\"username\">Email address</label>\n          <span class=\"usa-error-message\" id=\"input-error-message\" role=\"alert\"\n            *ngIf=\"isFormValid()\">Please enter email address</span>\n          <input class=\"usa-input\" [class.usa-input--error]=\"isFormValid()\" type=\"email\" email\n            autocapitalize=\"off\" autocorrect=\"off\" required aria-required=\"true\" formControlName=\"username\">\n        </div>\n      </fieldset>\n\n    </div>\n\n    <div class=\"grid-row flex-column\">\n      <div class=\"grid-col\">\n        <button class=\"usa-button width-full\" type=\"submit\">Submit</button>\n      </div>\n      <div class=\"grid-col\"><button type=\"button\" class=\"usa-button usa-button--unstyled\"  routerLink=\"/auth\">Signin</button>\n      </div>\n    </div>\n  </form>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SignInComponent } from './components/sign-in/sign-in.component';\nimport { SignOutComponent } from './components/sign-out/sign-out.component';\nimport { ForgotUsernameComponent } from './components/forgot-username/forgot-username.component';\nimport { ResetPasswordComponent } from './components/reset-password/reset-password.component';\nimport { ForgotPasswordComponent } from './components/forgot-password/forgot-password.component';\nimport { RegisterComponent } from './components/register/register.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/sign-in', pathMatch: 'full' },\n  { path: 'sign-in', component: SignInComponent },\n  { path: 'forgot-password', component: ForgotPasswordComponent },\n  { path: 'forgot-username', component: ForgotUsernameComponent },\n  { path: 'sign-out', component: SignOutComponent },\n  { path: 'reset-password', component: ResetPasswordComponent },\n  { path: 'register', component: RegisterComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Validators, FormBuilder } from '@angular/forms';\nimport { MESSAGES_CONFIG } from '../../../shared/config/message.config';\nimport { MessageType } from '../../../shared/enums/message-type.enum';\nimport { CommonService } from '../../../shared/services/common.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.sass']\n})\nexport class ForgotPasswordComponent implements OnInit, OnDestroy {\n\n  VALIDATION_MESSAGE = MESSAGES_CONFIG.form.general.generalFormError;\n  MESSAGE_TYPE: string = MessageType[MessageType.ERROR];\n  isFormSubmitted = false;\n\n  forgotPasswordForm = this.fb.group({\n    username: ['', Validators.required]\n  });\n\n  constructor(private fb: FormBuilder, private commonService: CommonService) { }\n\n  ngOnInit(): void {\n    this.commonService.publishAuthModule(true);\n  }\n\n  ngOnDestroy() {\n    this.commonService.publishAuthModule(false);\n  }\n\n  isUsernameError(): boolean {\n    return this.isFormSubmitted && !this.forgotPasswordForm.valid && !this.forgotPasswordForm.get('username').valid;\n  }\n\n  isFormValid() {\n    return this.isFormSubmitted && !this.forgotPasswordForm.valid;\n  }\n\n  onSubmit() {\n    this.isFormSubmitted = true;\n  }\n\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { MessageType } from '../../../shared/enums/message-type.enum';\nimport { MESSAGES_CONFIG } from '../../../shared/config/message.config';\nimport { CommonService } from '../../../shared/services/common.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.sass']\n})\nexport class RegisterComponent implements OnInit, OnDestroy {\n\n  VALIDATION_MESSAGE = MESSAGES_CONFIG.form.general.generalFormError;\n  MESSAGE_TYPE: string = MessageType[MessageType.ERROR];\n  isFormSubmitted = false;\n\n  registrationForm = this.fb.group({\n    username: ['', Validators.required]\n  });\n\n  constructor(private fb: FormBuilder, private commonService: CommonService) { }\n\n  ngOnInit(): void {\n    this.commonService.publishAuthModule(true);\n  }\n\n  ngOnDestroy() {\n    this.commonService.publishAuthModule(false);\n  }\n\n  isFormValid() {\n    return this.isFormSubmitted && !this.registrationForm.valid;\n  }\n\n  onSubmit() {\n    this.isFormSubmitted = true;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { SignInComponent } from './components/sign-in/sign-in.component';\nimport { SignOutComponent } from './components/sign-out/sign-out.component';\nimport { ForgotUsernameComponent } from './components/forgot-username/forgot-username.component';\nimport { ForgotPasswordComponent } from './components/forgot-password/forgot-password.component';\nimport { ResetPasswordComponent } from './components/reset-password/reset-password.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { RegisterComponent } from './components/register/register.component';\n\n@NgModule({\n  declarations: [\n    SignInComponent, SignOutComponent, ForgotUsernameComponent,\n    ForgotPasswordComponent, ResetPasswordComponent, RegisterComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AuthRoutingModule,\n    SharedModule\n  ]\n})\nexport class AuthModule { }\n","<a class=\"usa-skipnav\" href=\"#main-content\">Skip to main content</a>\n<section class=\"usa-banner\" aria-label=\"Official government website\">\n  <div class=\"usa-accordion\">\n    <header class=\"usa-banner__header\">\n      <div class=\"usa-banner__inner\">\n        <div class=\"grid-col-auto\">\n          <img class=\"usa-banner__header-flag\" src=\"/assets/img/us_flag_small.png\" alt=\"U.S. flag\">\n        </div>\n        <div class=\"grid-col-fill tablet:grid-col-auto\">\n          <p class=\"usa-banner__header-text\">An official website of the United States government</p>\n          <p class=\"usa-banner__header-action\" aria-hidden=\"true\">Here’s how you know</p>\n        </div>\n        <button class=\"usa-accordion__button usa-banner__button\" aria-expanded=\"false\" aria-controls=\"gov-banner\"\n          (click)=\"isOpen=true\">\n          <span class=\"usa-banner__button-text\">Here’s how you know</span>\n        </button>\n      </div>\n    </header>\n    <div class=\"usa-banner__content usa-accordion__content\" id=\"gov-banner\" [hidden]=\"!isOpen\">\n      <div class=\"grid-row grid-gap-lg\">\n        <div class=\"usa-banner__guidance tablet:grid-col-6\">\n          <img class=\"usa-banner__icon usa-media-block__img\" src=\"/assets/img/icon-dot-gov.svg\" alt=\"Dot gov\">\n          <div class=\"usa-media-block__body\">\n            <p>\n              <strong>The .gov means it’s official.</strong>\n              <br>\n              Federal government websites often end in .gov or .mil. Before sharing sensitive information, make sure\n              you’re on a federal government site.\n            </p>\n          </div>\n        </div>\n        <div class=\"usa-banner__guidance tablet:grid-col-6\">\n          <img class=\"usa-banner__icon usa-media-block__img\" src=\"/assets/img/icon-https.svg\" alt=\"Https\">\n          <div class=\"usa-media-block__body\">\n            <p>\n              <strong>The site is secure.</strong>\n              <br>\n              The <strong>https://</strong> ensures that you are connecting to the official website and that any\n              information you provide is encrypted and transmitted securely.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n\n<div class=\"usa-overlay\"></div>\n<header class=\"usa-header usa-header--basic\">\n  <div class=\"usa-nav-container\">\n    <div class=\"usa-navbar\">\n      <div class=\"usa-logo\" id=\"basic-logo\">\n        <em class=\"usa-logo__text\"><a routerLink=\"/\" title=\"Home\" aria-label=\"Home\">Angular USWDS</a></em>\n      </div>\n      <button class=\"usa-menu-btn\" [hidden]=\"inAuthModule\">Menu</button>\n    </div>\n    <span [hidden]=\"inAuthModule\">\n      <nav aria-label=\"Primary navigation\" class=\"usa-nav\">\n        <button class=\"usa-nav__close\"><img src=\"/assets/img/close.svg\" alt=\"close\"></button>\n        <ul class=\"usa-nav__primary usa-accordion\">\n          <li class=\"usa-nav__primary-item\">\n            <button class=\"usa-accordion__button usa-nav__link  usa-current\" aria-expanded=\"false\"\n              aria-controls=\"basic-nav-section-one\" (click)=\"isFirstMenuOpen=true\"><span>Secured</span></button>\n            <ul id=\"basic-nav-section-one\" class=\"usa-nav__submenu\" [hidden]=\"!isFirstMenuOpen\">\n              <li class=\"usa-nav__submenu-item\" [hidden]=\"!isLoginRequired\">\n                <a routerLink=\"/dashboard\" class=\"\">Dashboard</a>\n              </li>\n              <li class=\"usa-nav__submenu-item\">\n                <a href=\"#\" class=\"\"> Navigation link</a>\n              </li>\n              <li class=\"usa-nav__submenu-item\">\n                <a href=\"#\" class=\"\"> Navigation link</a>\n              </li>\n            </ul>\n          </li>\n          <li class=\"usa-nav__primary-item\">\n            <button class=\"usa-accordion__button usa-nav__link\" aria-expanded=\"false\"\n              aria-controls=\"basic-nav-section-two\" (click)=\"isSecondMenuOpen=true\"><span>Unsecured</span></button>\n            <ul id=\"basic-nav-section-two\" class=\"usa-nav__submenu\" [hidden]=\"!isSecondMenuOpen\">\n              <li class=\"usa-nav__submenu-item\">\n                <a href=\"#\" class=\"\"> Navigation link</a>\n              </li>\n              <li class=\"usa-nav__submenu-item\">\n                <a href=\"#\" class=\"\"> Navigation link</a>\n              </li>\n              <li class=\"usa-nav__submenu-item\">\n                <a href=\"#\" class=\"\"> Navigation link</a>\n              </li>\n            </ul>\n          </li>\n          <li class=\"usa-nav__primary-item\">\n            <a class=\"usa-nav__link\" routerLink=\"/auth\" *ngIf=\"!isLoginRequired\"><span>Login</span></a>\n            <a class=\"usa-nav__link\" routerLink=\"/sign-out\" *ngIf=\"isLoginRequired\"><span>Logout</span></a>\n          </li>\n        </ul>\n        <form class=\"usa-search usa-search--small \" role=\"search\">\n          <label class=\"usa-sr-only\" for=\"basic-search-field-small\">Search small</label>\n          <input class=\"usa-input\" id=\"basic-search-field-small\" type=\"search\" name=\"search\">\n          <button class=\"usa-button\" type=\"submit\"><span class=\"usa-sr-only\">Search</span></button>\n        </form>\n      </nav>\n    </span>\n  </div>\n</header>","import { Component, OnInit } from '@angular/core';\nimport { CommonService } from '../../services/common.service';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  isLoginRequired = false;\n  inAuthModule = false;\n  isOpen = false;\n  isFirstMenuOpen = false;\n  isSecondMenuOpen = false;\n\n  constructor(private commonService: CommonService, private authService: AuthService) {\n    commonService.isUserAuthenticated$.subscribe(res => {\n      if (authService.getCurrentUserLoggedInStatus()) {\n        this.isLoginRequired = true;\n      } else {\n        this.isLoginRequired = false;\n      }\n    });\n\n    commonService.isAuthModule$.subscribe(res => {\n      this.inAuthModule = res;\n    });\n  }\n\n  ngOnInit(): void {\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"usa-footer\"> \r\n  <div class=\"usa-footer__primary-section\">\r\n    <nav class=\"usa-footer__nav\" aria-label=\"Footer navigation\">\r\n      <ul class=\"grid-row grid-gap\">\r\n        <li class=\"mobile-lg:grid-col-4 desktop:grid-col-auto usa-footer__primary-content\">\r\n          <a class=\"usa-footer__primary-link\" href=\"javascript:void(0);\">Primary link</a>\r\n        </li>\r\n        <li class=\"mobile-lg:grid-col-4 desktop:grid-col-auto usa-footer__primary-content\">\r\n          <a class=\"usa-footer__primary-link\" href=\"javascript:void(0);\">Primary link</a>\r\n        </li>\r\n        <li class=\"mobile-lg:grid-col-4 desktop:grid-col-auto usa-footer__primary-content\">\r\n          <a class=\"usa-footer__primary-link\" href=\"javascript:void(0);\">Primary link</a>\r\n        </li>\r\n        <li class=\"mobile-lg:grid-col-4 desktop:grid-col-auto usa-footer__primary-content\">\r\n          <a class=\"usa-footer__primary-link\" href=\"javascript:void(0);\">Primary link</a>\r\n        </li>\r\n        <li class=\"mobile-lg:grid-col-4 desktop:grid-col-auto usa-footer__primary-content\">\r\n          <a class=\"usa-footer__primary-link\" href=\"javascript:void(0);\">Primary link</a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  </div>\r\n\r\n  <div class=\"usa-footer__secondary-section\">\r\n    <div class=\"grid-container\">\r\n      <div class=\"grid-row grid-gap\">\r\n        <div class=\"usa-footer__logo grid-row mobile-lg:grid-col-6 mobile-lg:grid-gap-2\">\r\n          <div class=\"mobile-lg:grid-col-auto\">\r\n            <img class=\"usa-footer__logo-img\" src=\"/assets/img/logo-img.png\" alt=\"\">\r\n          </div>\r\n          <div class=\"mobile-lg:grid-col-auto\">\r\n            <h3 class=\"usa-footer__logo-heading\">Name of Agency</h3>\r\n          </div>\r\n        </div>\r\n        <div class=\"usa-footer__contact-links mobile-lg:grid-col-6\">\r\n          <div class=\"usa-footer__social-links grid-row grid-gap-1\">\r\n            <div class=\"grid-col-auto\">\r\n              <a class=\"usa-social-link usa-social-link--facebook\" href=\"javascript:void(0);\">\r\n                <span>Facebook</span>\r\n              </a>\r\n            </div>\r\n            <div class=\"grid-col-auto\">\r\n              <a class=\"usa-social-link usa-social-link--twitter\" href=\"javascript:void(0);\">\r\n                <span>Twitter</span>\r\n              </a>\r\n            </div>\r\n            <div class=\"grid-col-auto\">\r\n              <a class=\"usa-social-link usa-social-link--youtube\" href=\"javascript:void(0);\">\r\n                <span>YouTube</span>\r\n              </a>\r\n            </div>\r\n            <div class=\"grid-col-auto\">\r\n              <a class=\"usa-social-link usa-social-link--rss\" href=\"javascript:void(0);\">\r\n                <span>RSS</span>\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <h3 class=\"usa-footer__contact-heading\">Agency Contact Center</h3>\r\n          <address class=\"usa-footer__address\">\r\n            <div class=\"usa-footer__contact-info grid-row grid-gap\">\r\n              <div class=\"grid-col-auto\">\r\n                <a href=\"tel:1-800-555-5555\">(800) CALL-GOVT</a>\r\n              </div>\r\n              <div class=\"grid-col-auto\">\r\n                <a href=\"mailto:info@agency.gov\">info@agency.gov</a>\r\n              </div>\r\n            </div>\r\n          </address>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</footer>\r\n","import { Component } from '@angular/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n}\n","<div class=\"Site\">\n  <app-header></app-header>\n  <main class=\"Site-content\">\n    <router-outlet></router-outlet>\n  </main>\n  <app-footer></app-footer>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-doc-layout',\n  templateUrl: './doc-layout.component.html',\n  styleUrls: ['./doc-layout.component.scss']\n})\nexport class DocLayoutComponent implements OnInit {\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"usa-section\">\r\n    <div class=\"grid-container\">\r\n        <div class=\"grid-row grid-gap\">\r\n            <div class=\"usa-layout-docs__sidenav desktop:grid-col-3\">\r\n                <nav aria-label=\"Secondary navigation\">\r\n                    <ul class=\"usa-sidenav\">\r\n                        <li class=\"usa-sidenav__item\">\r\n                            <a routerLink=\"/\">Home Page</a>\r\n                        </li>\r\n                        <li class=\"usa-sidenav__item\">\r\n                            <a routerLink=\"/dashboard\"  routerLinkActive=\"usa-current\">Dashboard</a>\r\n                            <ul class=\"usa-sidenav__sublist\">\r\n                                <li class=\"usa-sidenav__item\">\r\n                                    <a routerLink=\"profile\" routerLinkActive=\"usa-current\">Profile</a>\r\n                                </li> \r\n                                <li class=\"usa-sidenav__item\">\r\n                                    <a routerLink=\"settings\" routerLinkActive=\"usa-current\">Settings</a>\r\n                                </li> \r\n                            </ul>\r\n                        </li>\r\n                        <li class=\"usa-sidenav__item\">\r\n                            <a >Parent link</a>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n\r\n            </div>\r\n\r\n            <main class=\"usa-layout-docs__main desktop:grid-col-9 usa-prose usa-layout-docs\" id=\"main-content\"> \r\n                <router-outlet></router-outlet> \r\n            </main>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DocLayoutComponent } from './shared/layout/doc-layout/doc-layout.component';\r\nimport { AccountGuard } from './dashboard/guard/account.guard';\r\nimport { PageNotFoundComponent } from './shared/components/page-not-found/page-not-found.component';\r\n\r\nconst routes: Routes = [\r\n\r\n  { path: 'landing', loadChildren: () => import('./landing/landing.module').then(m => m.LandingModule) },\r\n  { path: 'auth', loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule) },\r\n  {\r\n    path: 'dashboard', canActivate: [AccountGuard], component: DocLayoutComponent,\r\n    children: [{ path: '', loadChildren: () => import('./dashboard/dashboard.module').then(m => m.DashboardModule) }]\r\n  },\r\n\r\n  { path: '', redirectTo: '/landing', pathMatch: 'full' },\r\n  { path: '**', component: PageNotFoundComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router, NavigationExtras } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../../shared/services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountGuard implements CanActivate {\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (this.authService.getCurrentUserLoggedInStatus()) { return true; }\n    const navigationExtras: NavigationExtras = {\n      queryParams: { login_attempt: 'failed' }\n    };\n    this.router.navigate(['/auth/sign-in'], navigationExtras);\n    return false;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.sass']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"grid-container \">\n    <div class=\"grid-row display-flex flex-column flex-align-center\">\n        <legend class=\"usa-legend margin-y-205\">Page Not Found Error</legend>\n        <div class=\"usa-alert usa-alert--error\">\n            <div class=\"usa-alert__body\">\n                <h3 class=\"usa-alert__heading\">We are unable to find page you requested</h3>\n                <p class=\"usa-alert__text\">Please click here to go home,\n                    <a href=\"/\" class=\"usa-button usa-button--unstyled\">Home Page</a>\n                </p>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { SharedModule } from './shared/shared.module';\nimport { DashboardModule } from './dashboard/dashboard.module';\nimport { LandingModule } from './landing/landing.module';\nimport { AuthModule } from './auth/auth.module';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    SharedModule,\n    LandingModule,\n    AuthModule,\n    DashboardModule,\n    AppRoutingModule\n  ],\n  declarations: [\n    AppComponent\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}